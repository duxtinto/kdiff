buildscript {
    apply from: './gradle/scripts/dependencies.build.gradle'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:${versions.plugins.junit}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.plugins.kotlin}"
    }
}

plugins {
    id 'jacoco'
    id "org.jetbrains.kotlin.jvm" version "1.2.31"
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply from: './gradle/scripts/dependencies.build.gradle'
apply from: './gradle/scripts/testing.build.gradle'

group = 'com.github.duxtinto'

allprojects {
    repositories {
        mavenCentral()
    }

    apply from: './gradle/scripts/dependencies.build.gradle'
}

sourceSets {
    main {
        kotlin.srcDirs 'src/main/kotlin'
        resources.srcDir 'src/main/resources'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = project.versions.jvm
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${project.versions.kotlin}"
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
